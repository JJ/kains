#!/usr/bin/env perl6

use v6;
use NativeCall;

sub MAIN() {
	my $rootfs	:= '/usr/local/cedric/rootfs/ubuntu-core-14.10-core-amd64';
	my @bindings	:= < /dev /proc >;

	sub check-native-error(int $status) {
		my $caller_name := callframe(1).my.<&?ROUTINE>.name; # caller() NYI

		my $errno := cglobal('libc.so.6', 'errno', int32);
		sub strerror(int --> Str) is native { * }

		$status >= 0 or die "Error calling native function: "
				  ~ "$caller_name: { strerror($errno) }"
	}

	sub unshare-mount-namespace() {
		sub unshare(int --> int) is native is symbol('unshare') { * }

		constant CLONE_NEWNS	:= 0x00020000;
		constant CLONE_NEWUSER	:= 0x10000000;

		check-native-error(unshare(CLONE_NEWUSER +| CLONE_NEWNS));
	}

	sub mount-rbind(Str :$source, Str :$target) {
		sub mount(Str, Str, int, int, int --> int) is native is symbol('mount') { * }

		constant MS_PRIVATE	:= 0x40000;
		constant MS_BIND	:= 0x1000;
		constant MS_REC		:= 0x4000;

		check-native-error(mount($source, $target, 0, MS_PRIVATE +| MS_BIND +| MS_REC, 0));
	}

	unshare-mount-namespace();

	for @bindings {
		mount-rbind(:source($_), :target("$rootfs/$_"))
	}
}
